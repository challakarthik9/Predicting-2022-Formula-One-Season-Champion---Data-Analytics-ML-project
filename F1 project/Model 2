{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Model 2","provenance":[],"authorship_tag":"ABX9TyMt+AIO1OkumVLpixLt6vxO"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"KPaNDIbYyaBZ"},"outputs":[],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["def raceLengthLabeler(df,raceidcolumn,millisecondscolumn):\n","  df=df[df[millisecondscolumn]!='\\\\N']\n","  df[millisecondscolumn]=df[millisecondscolumn].astype(int)\n","  df=df[df[millisecondscolumn]<df[millisecondscolumn].quantile(0.99)] #eliminate outliers \n","  df_new=pd.DataFrame()\n","  df_new['time']=df.groupby(raceidcolumn)[millisecondscolumn].nsmallest(10).groupby('raceId').mean()\n","  q1=df_new['time'].quantile(q=0.2)\n","  q2=df_new['time'].quantile(q=0.4)\n","  q3=df_new['time'].quantile(q=0.6)\n","  q4=df_new['time'].quantile(q=0.8)\n","  def trackLengthDefiner(x):\n","      if (x<q1): return 1#fastest\n","      if (q1<x<=q2):return 2  #fast\n","      if (q2<x<=q3):return 3 #medium\n","      if (q3<x<=q4):return 4 #slow\n","      if (q4<x):return 5 #slowest\n","  df['race_type']=df[millisecondscolumn].apply(lambda x:trackLengthDefiner(x))\n","  return df\n","\n","def importantRaceLabeler(df,circuitidcolumn):\n","  def importantTypeDefiner(x):\n","      if (x==1 or x==14 or x==21 or x==18 or x==3 or x==4 or x==6 or x==13 or x==10 or x==11 or x==15 or x==20 or x==22 or x==70 or x==24  or x==9 or x==4): return 1#important race\n","      else: return 0 #others\n","  df['important_race']=df[circuitidcolumn].apply(lambda x:importantTypeDefiner(x))\n","  return df\n","\n","def downforceRaceLabeler(df,circuitidcolumn):\n","  def downforceTypeDefiner(x):\n","      if (x==6 or x==11 or x==21 or x==15 or x==4 or x==71): return 1 #downforce race\n","      else: return 0 #others\n","  df['downforce_race']=df[circuitidcolumn].apply(lambda x:downforceTypeDefiner(x))\n","  return df\n","\n","def mixedRaceLabeler(df,circuitidcolumn):\n","  def mixedTypeDefiner(x):\n","      if (x==9 or x==13 or x==32 or x==22 or x==1): return 1#mixed race\n","      else: return 0 #others\n","  df['mixed_race']=df[circuitidcolumn].apply(lambda x:mixedTypeDefiner(x))\n","  return df\n","\n","def motorRaceLabeler(df,circuitidcolumn):\n","  def motorTypeDefiner(x):\n","      if (x==14 or x==73 or x==69 or x==8 or x==34 or x==70 or x==18 or x==24 or x==10 or x==3): return 1#mixed race\n","      else: return 0 #others\n","  df['motor_race']=df[circuitidcolumn].apply(lambda x:motorTypeDefiner(x))\n","  return df\n","\n","def constructorFaultLabeler(df,statuscolumn):\n","  def constructorFaultDefiner(x):\n","    temp=[5,6,7,8,9,10,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,51,54,56,129,60,63,64,65,66,67,68,69,70,\n","          71,75,76,79,80,83,84,85,86,87,89,91,92,93,94,95,98,99,101,102,103,105,106,107,108,109,110,121,126,131,132,135,136,138]\n","    if x in temp: return 1\n","    else: return 0 #others\n","  df['constructor_finish']=df[statuscolumn].apply(lambda x:constructorFaultDefiner(x))\n","  return df\n","\n","def driverFaultLabeler(df,statuscolumn):\n","  def driverFaultDefiner(x):\n","    temp=[2,3,4,19,29,59,27,62,73,77,78,81,82,90,96,97,100,104,130,137,139]\n","    if x in temp: return 1\n","    else: return 0 #others\n","  df['driver_fault']=df[statuscolumn].apply(lambda x:driverFaultDefiner(x))\n","  return df\n","\n","def driverFinishLabeler(df,statuscolumn):\n","  def driverFinishDefiner(x):\n","    temp=[1,11,12,13,14,15,16,17,18,19,45,50,128,53,55,58,88,111,112,113,114,115,116,117,118,119,120,122,123,124,125,127,133,134]\n","    if x in temp: return 1\n","    else: return 0 #others\n","  df['driver_finish']=df[statuscolumn].apply(lambda x:driverFinishDefiner(x))\n","  return df\n","\n","def ferrariDominationLabeler(df,datecolumnname): \n","  def ferrariDominationDefiner(x):\n","    if (1999<=x<=2004) : return 1\n","    else: return 0\n","\n","  df['ferrari_domination']=df[datecolumnname].apply(lambda x:ferrariDominationDefiner(x.year))\n","  \n","  return df\n","\n","def mercedesDominationLabeler(df,datecolumnname): \n","  def mercedesDominationDefiner(x):\n","    if (2014<=x<=2019) : return 1\n","    else: return 0\n","\n","  df['mercedes_domination']=df[datecolumnname].apply(lambda x:mercedesDominationDefiner(x.year))\n","  \n","  return df\n","\n","def redbullDominationLabeler(df,datecolumnname): \n","  def redbullDominationDefiner(x):\n","    if (2010<=x<=2013) : return 1\n","    else: return 0\n","\n","  df['redbull_domination']=df[datecolumnname].apply(lambda x:redbullDominationDefiner(x.year))\n","  \n","  return df\n","\n","def mclarenDominationLabeler(df,datecolumnname): \n","  def mclarenDominationDefiner(x):\n","    if (1984<=x<=1991) : return 1\n","    else: return 0\n","\n","  df['mclaren_domination']=df[datecolumnname].apply(lambda x:mclarenDominationDefiner(x.year))\n","  \n","  return df\n","\n","def williamsDominationLabeler(df,datecolumnname): \n","  def williamsDominationDefiner(x):\n","    if (1992<=x<=1997) : return 1\n","    else: return 0\n","\n","  df['willliams_domination']=df[datecolumnname].apply(lambda x:williamsDominationDefiner(x.year))\n","  \n","  return \n","\n","def nonDominationLabeler(df,datecolumnname): \n","  def nonDominationDefiner(x):\n","    if (2004<=x<=2008 or x<1984) : return 1\n","    else: return 0\n","\n","  df['non_domination']=df[datecolumnname].apply(lambda x:nonDominationDefiner(x.year))\n","  \n","  return df\n"],"metadata":{"id":"rPGPnQEusB9e"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","pd.set_option('display.max_rows', 200)\n","pd.set_option('display.max_columns', 100)\n","from datetime import timedelta\n","from tqdm import tqdm\n","\n","circuits = pd.read_csv(\"/content/drive/MyDrive/IEOR 4523 Team Project /F1/circuits.csv\")\n","constructor_results = pd.read_csv(\"/content/drive/MyDrive/IEOR 4523 Team Project /F1/constructor_results.csv\")\n","constructor_standings = pd.read_csv(\"/content/drive/MyDrive/IEOR 4523 Team Project /F1/constructor_standings.csv\")\n","constructors = pd.read_csv(\"/content/drive/MyDrive/IEOR 4523 Team Project /F1/constructors.csv\")\n","driver_standings = pd.read_csv(\"/content/drive/MyDrive/IEOR 4523 Team Project /F1/driver_standings.csv\")\n","drivers = pd.read_csv(\"/content/drive/MyDrive/IEOR 4523 Team Project /F1/drivers.csv\")\n","lap_times = pd.read_csv(\"/content/drive/MyDrive/IEOR 4523 Team Project /F1/lap_times.csv\")\n","pit_stopes = pd.read_csv(\"/content/drive/MyDrive/IEOR 4523 Team Project /F1/pit_stops.csv\")\n","qualifying = pd.read_csv(\"/content/drive/MyDrive/IEOR 4523 Team Project /F1/qualifying.csv\")\n","races = pd.read_csv(\"/content/drive/MyDrive/IEOR 4523 Team Project /F1/races.csv\")\n","results = pd.read_csv(\"/content/drive/MyDrive/IEOR 4523 Team Project /F1/results.csv\")\n","seasons = pd.read_csv(\"/content/drive/MyDrive/IEOR 4523 Team Project /F1/seasons.csv\")\n","sprint_results = pd.read_csv(\"/content/drive/MyDrive/IEOR 4523 Team Project /F1/sprint_results.csv\")\n","status = pd.read_csv(\"/content/drive/MyDrive/IEOR 4523 Team Project /F1/status.csv\")"],"metadata":{"id":"4Ot-XpTAyd1i"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["driver_race_data = results[[\"raceId\",\"driverId\",\"constructorId\",\"grid\",\"position\", \"points\", \"milliseconds\",'statusId']].copy()\n","driver_race_data = driver_race_data[driver_race_data[\"position\"]!=\"\\\\N\"]\n","driver_race_data[\"position\"] = [int(i) for i in driver_race_data[\"position\"]]\n","driver_race_data[\"winner\"] = np.where(driver_race_data[\"position\"]==1,1,0)\n","driver_race_data = driver_race_data[(driver_race_data[\"raceId\"]!=780)&(driver_race_data[\"raceId\"]!=784)&(driver_race_data[\"raceId\"]!=828)]\n","df_driver_standings = driver_standings[[\"raceId\",\"driverId\"]].copy()\n","races = races[[\"raceId\",\"year\",\"date\",\"circuitId\"]]\n","race_team_date_ckt = driver_race_data.merge(races, left_on=\"raceId\", right_on=\"raceId\", how=\"left\")\n","race_team_date_ckt = race_team_date_ckt.merge(circuits[[\"circuitId\",\"name\"]], on =\"circuitId\",how=\"left\" )\n","driver_race_data = driver_race_data.merge(races, on=\"raceId\", how=\"left\")\n","df0 = driver_race_data\n","\n","df1 = df0.copy()\n","podium = []\n","for i in df1[\"position\"]:\n","  if (i==1)|(i==2)|(i==3):\n","    podium.append(1)\n","  else:\n","    podium.append(0)\n","\n","df1[\"podium\"] = podium\n","\n","df1[\"date\"] = pd.to_datetime(df1[\"date\"], infer_datetime_format=True)\n","df1[\"pole_position\"] = np.where(df1[\"grid\"]==1,1,0)\n","df2 = df1.copy()"],"metadata":{"id":"ioEvEVXhy0-K"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["past_podium=[]\n","def total_n_years_podium(x,df=df1,n=2):\n","  dfz = df[(df[\"date\"]<x[\"date\"])&(df[\"date\"]>=x[\"date\"]-timedelta(days=365*n))&(df[\"constructorId\"]==x[\"constructorId\"]) ]\n","  past_pods = dfz[\"podium\"].sum()\n","  return past_pods\n","for i in range(len(df1)):\n","  past_podium.append(total_n_years_podium(df1.iloc[i],df=df1,n=2))\n","df1[\"past_years_podium\"] = past_podium\n","\n","\n","past_90podium = []\n","def last_90_days_podium(x,df=df1,n=2):\n","  dfz = df[(df[\"date\"]<x[\"date\"])&(df[\"date\"]>=x[\"date\"]-timedelta(days=90))&(df[\"constructorId\"]==x[\"constructorId\"]) ]\n","  past_pods = dfz[\"podium\"].sum()\n","  return past_pods\n","for i in range(len(df1)):\n","  past_90podium.append(last_90_days_podium(df1.iloc[i],df=df1,n=2))\n","df1[\"this_year_podium\"] = past_90podium\n","\n","\n","past_point = []\n","def total_n_years_points(x,df=df1,n=2):\n","  dfz = df[(df[\"date\"]<x[\"date\"])&(df[\"date\"]>=x[\"date\"]-timedelta(days=365*n))&(df[\"driverId\"]==x[\"driverId\"]) ]\n","  past_points = dfz[\"points\"].sum()\n","  return past_points;\n","for i in range(len(df1)):\n","  past_point.append(total_n_years_points(df1.iloc[i],df=df1,n=2))\n","df1[\"past_years_point\"] = past_point\n","\n","\n","past_90points = []\n","def last_90_days_points(x,df=df1,n=2):\n","  dfz = df[(df[\"date\"]<x[\"date\"])&(df[\"date\"]>=x[\"date\"]-timedelta(days=90))&(df[\"driverId\"]==x[\"driverId\"]) ]\n","  past_points = dfz[\"points\"].sum()\n","  return past_points\n","for i in range(len(df1)):\n","  past_90points.append(last_90_days_points(df1.iloc[i],df=df1,n=2))\n","df1[\"this_year_point\"] = past_90points\n","\n","\n","def total_n_years_wins(x,df=df1,n=2):\n","  dfz = df[(df[\"date\"]<x[\"date\"])&(df[\"date\"]>=x[\"date\"]-timedelta(days=365*n))&(df[\"driverId\"]==x[\"driverId\"]) ]\n","  past_wins = dfz[\"winner\"].sum()\n","  return past_wins\n","past_win = []\n","for i in range(len(df1)):\n","  past_win.append(total_n_years_wins(df1.iloc[i],df=df1,n=2))\n","df1[\"past_years_wins\"] = past_win\n","\n","\n","def this_year_wins(x,df=df1,n=2):\n","  dfz = df[(df[\"date\"]<x[\"date\"])&(df[\"date\"]>=x[\"date\"]-timedelta(days=90))&(df[\"driverId\"]==x[\"driverId\"]) ]\n","  past_wins = dfz[\"winner\"].sum()\n","  return past_wins\n","past90_win = []\n","for i in range(len(df1)):\n","  past90_win.append(this_year_wins(df1.iloc[i],df=df1,n=2))\n","df1[\"this_year_wins\"] = past90_win\n","\n","\n","df1[\"pole_position\"] = np.where(df1[\"grid\"]==1,1,0)\n","\n","\n","def total_n_years_polls(x,df=df1,n=2):\n","  dfz = df[(df[\"date\"]<=x[\"date\"])&(df[\"date\"]>=x[\"date\"]-timedelta(days=365*n))&(df[\"driverId\"]==x[\"driverId\"]) ]\n","  past_polls = dfz[\"pole_position\"].sum()\n","  return past_polls\n","past_poll = []\n","for i in range(len(df1)):\n","  past_poll.append(total_n_years_polls(df1.iloc[i],df=df1,n=2))\n","df1[\"past_years_pole\"] = past_poll\n","\n","\n","def this_year_polls(x,df=df1,n=2):\n","  dfz = df[(df[\"date\"]<x[\"date\"])&(df[\"date\"]>=x[\"date\"]-timedelta(days=90))&(df[\"driverId\"]==x[\"driverId\"]) ]\n","  past_polls = dfz[\"pole_position\"].sum()\n","  return past_polls\n","past90_poll = []\n","for i in range(len(df1)):\n","  past90_poll.append(this_year_polls(df1.iloc[i],df=df1,n=2))\n","df1[\"this_year_pole\"] = past90_poll\n"],"metadata":{"id":"LK1d6Phxo3YY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["d_s=driver_standings[['raceId','driverId','points']]\n","c_s=constructor_standings[['raceId','constructorId','points']]\n","s=status['statusId']"],"metadata":{"id":"GWGA9--57Nyd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":208},"id":"-934QDzPzZET","executionInfo":{"status":"ok","timestamp":1651463412627,"user_tz":240,"elapsed":20,"user":{"displayName":"Mehmet İnan","userId":"08992617967511172155"}},"outputId":"9e8c4b7f-28b5-42c7-9ad0-b196ddc5f5d6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   raceId  driverId  constructorId  grid  position  points milliseconds  \\\n","0      18         1              1     1         1    10.0      5690616   \n","1      18         2              2     5         2     8.0      5696094   \n","2      18         3              3     7         3     6.0      5698779   \n","3      18         4              4    11         4     5.0      5707797   \n","4      18         5              1     3         5     4.0      5708630   \n","\n","   statusId  winner  year       date  circuitId  podium  pole_position  \\\n","0         1       1  2008 2008-03-16          1       1              1   \n","1         1       0  2008 2008-03-16          1       1              0   \n","2         1       0  2008 2008-03-16          1       1              0   \n","3         1       0  2008 2008-03-16          1       0              0   \n","4         1       0  2008 2008-03-16          1       0              0   \n","\n","   past_years_podium  this_year_podium  past_years_point  this_year_point  \\\n","0                 32                 0             109.0              0.0   \n","1                  4                 0              84.0              0.0   \n","2                  1                 0              22.0              0.0   \n","3                 19                 0             233.0              0.0   \n","4                 32                 0              30.0              0.0   \n","\n","   past_years_wins  this_year_wins  past_years_pole  this_year_pole  \n","0                4               0                6               0  \n","1                0               0                0               0  \n","2                0               0                0               0  \n","3               10               0                8               0  \n","4                0               0                0               0  "],"text/html":["\n","  <div id=\"df-c069bc25-998c-4030-98ad-51602b5e0456\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>raceId</th>\n","      <th>driverId</th>\n","      <th>constructorId</th>\n","      <th>grid</th>\n","      <th>position</th>\n","      <th>points</th>\n","      <th>milliseconds</th>\n","      <th>statusId</th>\n","      <th>winner</th>\n","      <th>year</th>\n","      <th>date</th>\n","      <th>circuitId</th>\n","      <th>podium</th>\n","      <th>pole_position</th>\n","      <th>past_years_podium</th>\n","      <th>this_year_podium</th>\n","      <th>past_years_point</th>\n","      <th>this_year_point</th>\n","      <th>past_years_wins</th>\n","      <th>this_year_wins</th>\n","      <th>past_years_pole</th>\n","      <th>this_year_pole</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>18</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10.0</td>\n","      <td>5690616</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2008</td>\n","      <td>2008-03-16</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>32</td>\n","      <td>0</td>\n","      <td>109.0</td>\n","      <td>0.0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>8.0</td>\n","      <td>5696094</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2008</td>\n","      <td>2008-03-16</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>84.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>18</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>6.0</td>\n","      <td>5698779</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2008</td>\n","      <td>2008-03-16</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>18</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>5.0</td>\n","      <td>5707797</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2008</td>\n","      <td>2008-03-16</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>233.0</td>\n","      <td>0.0</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>18</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>4.0</td>\n","      <td>5708630</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2008</td>\n","      <td>2008-03-16</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>32</td>\n","      <td>0</td>\n","      <td>30.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c069bc25-998c-4030-98ad-51602b5e0456')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c069bc25-998c-4030-98ad-51602b5e0456 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c069bc25-998c-4030-98ad-51602b5e0456');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df_1=df1.copy() #ændicator cell"],"metadata":{"id":"vJ0emG0dK3hZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2=df1.merge(d_s, how=\"left\", on=[\"raceId\",'driverId'])\n","df3=df2.merge(c_s, how=\"left\", on=[\"raceId\",'constructorId'])\n","df4=df3.merge(s, how=\"left\", on=[\"statusId\"])\n","\n","def idChanger(df,columnname): #use 'constructorId' in columnname\n","  def idChange(x):\n","    if (x==2 or x==51 or x==251 or x==15): return 8 #romeo\n","    if x== 6:return 2 #ferrari \n","    if (x==18 or x==5 or x==213):return 6  #alphatauri\n","    if x==1:return 5 #mclaren\n","    if (x==131 or x==25 or x==16 or x==11 or x==23):return 1 \n","    if (x==210 or x==166 or x==206 or x==209 or x==21 or x==29):return 10 #haas\n","    if x==3: return 9 #williams\n","    if (x==24 or x==19 or x==9 ):return 3  #redbull\n","    if (x==53 or x==42 or x==208 or x==4 or x==214 or x==22 ):return 4 #alpine\n","    if (x==17 or x==13 or x==12 or x==205 or x==117 or x==211 or x==10):return 7 #aston\n","    else: return x\n","\n","  df['newId']=df[columnname].apply(lambda x:idChange(x))\n","  df['constructorId'] = df['newId']\n","  df=df.drop('newId',axis=1,inplace=True)\n","  \n","  return df\n","\n","idChanger(df4,\"constructorId\")\n","df4 = df4[(df4[\"constructorId\"]!=\"nan\")]\n","df4=df4.sort_values('date')\n","df4=df4[df4['year']>1960].reset_index(drop=True)\n","\n","df4\n","\n","raceLengthLabeler(df4,'raceId','milliseconds')\n","importantRaceLabeler(df4,'circuitId')\n","downforceRaceLabeler(df4,'circuitId')\n","mixedRaceLabeler(df4,'circuitId')\n","motorRaceLabeler(df4,'circuitId')\n","constructorFaultLabeler(df4,'statusId')\n","driverFaultLabeler(df4,'statusId')\n","driverFinishLabeler(df4,'statusId')\n","ferrariDominationLabeler(df4,'date')\n","mercedesDominationLabeler(df4,'date')\n","williamsDominationLabeler(df4,'date')\n","mclarenDominationLabeler(df4,'date')\n","nonDominationLabeler(df4,'date')\n","\n","df4.drop(['grid','position','milliseconds','winner','points_x','podium','pole_position'],axis=1,inplace=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eIRS2lC77XCN","executionInfo":{"status":"ok","timestamp":1651463413662,"user_tz":240,"elapsed":1051,"user":{"displayName":"Mehmet İnan","userId":"08992617967511172155"}},"outputId":"2494c423-365a-4897-c613-342388810d13"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]}]},{"cell_type":"code","source":["df4.rename(columns={'points': 'constructor_points','points_y':'driver_points'},inplace=True)"],"metadata":{"id":"5Mq38ZWPJ8Er"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df5=df4.groupby(['driverId','year']).head(4).reset_index(drop=True).sort_values(['date'])"],"metadata":{"id":"YDKhbN9lUs2H"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df5=df4.groupby('year').apply(lambda x: x.sort_values([\"date\",'constructor_points'],ascending=True)).reset_index(drop=True).groupby('year').tail(1).reset_index(drop=True).sort_values(['date'])\n","df5=df5[['year','constructorId']]\n","df5.rename(columns={'constructorId': 'constructor_champion'},inplace=True)\n","\n","df6=df4.merge(df5, how=\"left\", on=['year'])\n","\n","df6.drop(['raceId','driverId','statusId','year','date','circuitId'],axis=1,inplace=True)"],"metadata":{"id":"W_8MsSOcZ_4I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","df6.tail(50)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"zcyK7OaSxUJp","executionInfo":{"status":"ok","timestamp":1651008654582,"user_tz":240,"elapsed":482,"user":{"displayName":"Mehmet İnan","userId":"08992617967511172155"}},"outputId":"b4f7f8c1-e498-46b8-b006-317276a7d719"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       constructorId  past_years_podium  this_year_podium  past_years_point  \\\n","13450              5                  7                 2             252.0   \n","13451              8                  0                 0               5.0   \n","13452              6                  2                 0              20.0   \n","13453              4                  2                 1              77.0   \n","13454              9                  1                 0               7.0   \n","13455              8                  0                 0              14.0   \n","13456              5                  7                 2             250.0   \n","13457              2                  7                 1             249.5   \n","13458              7                  1                 0             109.0   \n","13459              6                  2                 0             167.0   \n","13460              5                  7                 2             223.0   \n","13461              4                  2                 1             122.0   \n","13462              1                 50                 8             419.0   \n","13463              3                 34                 9             558.5   \n","13464              1                 50                 8             688.5   \n","13465              2                  7                 1             250.0   \n","13466              3                 35                10             315.0   \n","13467              7                  1                 0             109.0   \n","13468              5                  7                 0             233.0   \n","13469              7                  1                 0              76.0   \n","13470              2                  7                 1             256.0   \n","13471              4                  2                 1             134.0   \n","13472              4                  2                 1              77.0   \n","13473             10                  0                 0               0.0   \n","13474              1                 52                 9             434.0   \n","13475              6                  2                 0             175.0   \n","13476              6                  2                 0              20.0   \n","13477              2                  7                 1             253.5   \n","13478              1                 52                 9             714.5   \n","13479              3                 35                10             576.5   \n","13480              5                  7                 0             251.0   \n","13481              7                  1                 0              10.0   \n","13482              9                  1                 0               7.0   \n","13483              5                  7                 0             257.0   \n","13484              5                  7                 0             233.0   \n","13485              9                  1                 0             105.0   \n","13486              7                  1                 0             109.0   \n","13487             10                  0                 0               0.0   \n","13488              8                  0                 0               0.0   \n","13489              8                  0                 0             442.0   \n","13490              6                  2                 0              32.0   \n","13491              4                  2                 0             136.0   \n","13492             10                  0                 0               1.0   \n","13493              1                 53                 0              19.0   \n","13494              1                 53                 0             732.5   \n","13495              2                  8                 0             268.5   \n","13496              2                  8                 0             257.0   \n","13497              3                 36                 0             315.0   \n","13498              4                  2                 0              81.0   \n","13499              3                 36                 0             602.5   \n","\n","       this_year_point  past_years_wins  this_year_wins  past_years_pole  \\\n","13450             38.0                0               0                1   \n","13451              0.0                0               0                0   \n","13452              2.0                0               0                0   \n","13453             31.0                0               0                0   \n","13454              0.0                0               0                0   \n","13455              8.0                0               0                0   \n","13456             39.0                0               0                1   \n","13457             55.0                0               0                0   \n","13458             16.0                0               0                1   \n","13459             26.0                1               0                0   \n","13460             48.0                1               1                0   \n","13461             16.0                1               0                0   \n","13462             74.0                3               1                8   \n","13463            123.0               11               2                8   \n","13464            122.0               18               3               15   \n","13465             60.0                0               0                1   \n","13466             72.0                2               0                0   \n","13467             10.0                0               0                1   \n","13468             32.0                1               0                0   \n","13469              8.0                0               0                0   \n","13470             54.0                0               0                1   \n","13471             27.0                1               0                0   \n","13472             27.0                0               0                0   \n","13473              0.0                0               0                0   \n","13474             74.0                3               1                8   \n","13475             34.0                1               0                0   \n","13476              2.0                0               0                0   \n","13477             51.0                0               0                0   \n","13478            148.0               19               4               15   \n","13479            141.0               11               2                9   \n","13480             22.0                0               0                1   \n","13481              0.0                0               0                0   \n","13482              0.0                0               0                0   \n","13483              0.0                0               0                1   \n","13484              0.0                1               0                0   \n","13485              0.0                0               0                0   \n","13486              0.0                0               0                1   \n","13487              0.0                0               0                0   \n","13488              0.0                0               0                0   \n","13489              0.0                3               0                8   \n","13490              0.0                0               0                0   \n","13491              0.0                1               0                0   \n","13492              0.0                0               0                0   \n","13493              0.0                0               0                0   \n","13494              0.0               19               0               15   \n","13495              0.0                0               0                0   \n","13496              0.0                0               0                2   \n","13497              0.0                2               0                0   \n","13498              0.0                0               0                0   \n","13499              0.0               12               0                9   \n","\n","       this_year_pole  driver_points  constructor_points  important_race  \\\n","13450               1          153.0               258.0               0   \n","13451               0            3.0                13.0               0   \n","13452               0           20.0               120.0               0   \n","13453               0           77.0               149.0               0   \n","13454               0            7.0                23.0               0   \n","13455               0           10.0                13.0               0   \n","13456               1          154.0               269.0               0   \n","13457               0          149.5               307.5               0   \n","13458               0           34.0                77.0               0   \n","13459               0          100.0               120.0               0   \n","13460               0          115.0               269.0               0   \n","13461               0           72.0               149.0               0   \n","13462               3          218.0               587.5               0   \n","13463               1          369.5               559.5               0   \n","13464               1          369.5               587.5               0   \n","13465               0          158.0               307.5               0   \n","13466               0          190.0               585.5               1   \n","13467               0           34.0                77.0               1   \n","13468               0          115.0               275.0               1   \n","13469               0           43.0                77.0               1   \n","13470               0          159.0               323.5               1   \n","13471               0           74.0               155.0               1   \n","13472               0           81.0               155.0               1   \n","13473               0            0.0                 0.0               1   \n","13474               3          226.0               613.5               1   \n","13475               0          110.0               142.0               1   \n","13476               0           32.0               142.0               1   \n","13477               0          164.5               323.5               1   \n","13478               2          387.5               613.5               1   \n","13479               1          395.5               585.5               1   \n","13480               1          160.0               275.0               1   \n","13481               0            0.0                 0.0               1   \n","13482               0            0.0                 0.0               1   \n","13483               0            0.0                 0.0               1   \n","13484               0            0.0                 0.0               1   \n","13485               0            0.0                 0.0               1   \n","13486               0            0.0                 0.0               1   \n","13487               0            0.0                10.0               1   \n","13488               0            1.0                 9.0               1   \n","13489               0            8.0                 9.0               1   \n","13490               0            4.0                 4.0               1   \n","13491               0            6.0                 8.0               1   \n","13492               0           10.0                10.0               1   \n","13493               0           12.0                27.0               1   \n","13494               0           15.0                27.0               1   \n","13495               0           18.0                44.0               1   \n","13496               0           26.0                44.0               1   \n","13497               0            0.0                 0.0               1   \n","13498               0            2.0                 8.0               1   \n","13499               0            0.0                 0.0               1   \n","\n","       downforce_race  mixed_race  motor_race  constructor_finish  \\\n","13450               0           0           0                   0   \n","13451               0           0           0                   0   \n","13452               0           0           0                   0   \n","13453               0           0           0                   0   \n","13454               0           0           0                   0   \n","13455               0           0           0                   0   \n","13456               0           0           0                   0   \n","13457               0           0           0                   0   \n","13458               0           0           0                   0   \n","13459               0           0           0                   0   \n","13460               0           0           0                   0   \n","13461               0           0           0                   0   \n","13462               0           0           0                   0   \n","13463               0           0           0                   0   \n","13464               0           0           0                   0   \n","13465               0           0           0                   0   \n","13466               0           0           1                   1   \n","13467               0           0           1                   0   \n","13468               0           0           1                   0   \n","13469               0           0           1                   0   \n","13470               0           0           1                   0   \n","13471               0           0           1                   0   \n","13472               0           0           1                   0   \n","13473               0           0           1                   0   \n","13474               0           0           1                   0   \n","13475               0           0           1                   0   \n","13476               0           0           1                   0   \n","13477               0           0           1                   0   \n","13478               0           0           1                   0   \n","13479               0           0           1                   0   \n","13480               0           0           1                   0   \n","13481               0           0           1                   0   \n","13482               0           0           1                   0   \n","13483               0           0           1                   0   \n","13484               0           0           1                   0   \n","13485               0           0           1                   0   \n","13486               0           0           1                   0   \n","13487               0           0           1                   0   \n","13488               0           0           1                   0   \n","13489               0           0           1                   0   \n","13490               0           0           1                   0   \n","13491               0           0           1                   0   \n","13492               0           0           1                   0   \n","13493               0           0           1                   0   \n","13494               0           0           1                   0   \n","13495               0           0           1                   0   \n","13496               0           0           1                   0   \n","13497               0           0           1                   1   \n","13498               0           0           1                   0   \n","13499               0           0           1                   1   \n","\n","       driver_fault  driver_finish  ferrari_domination  mercedes_domination  \\\n","13450             0              1                   0                    0   \n","13451             0              1                   0                    0   \n","13452             0              1                   0                    0   \n","13453             0              1                   0                    0   \n","13454             0              1                   0                    0   \n","13455             0              1                   0                    0   \n","13456             0              1                   0                    0   \n","13457             0              1                   0                    0   \n","13458             0              1                   0                    0   \n","13459             0              1                   0                    0   \n","13460             0              1                   0                    0   \n","13461             0              1                   0                    0   \n","13462             0              1                   0                    0   \n","13463             0              1                   0                    0   \n","13464             0              1                   0                    0   \n","13465             0              1                   0                    0   \n","13466             0              0                   0                    0   \n","13467             0              1                   0                    0   \n","13468             0              1                   0                    0   \n","13469             0              1                   0                    0   \n","13470             0              1                   0                    0   \n","13471             0              1                   0                    0   \n","13472             0              1                   0                    0   \n","13473             0              1                   0                    0   \n","13474             0              1                   0                    0   \n","13475             0              1                   0                    0   \n","13476             0              1                   0                    0   \n","13477             0              1                   0                    0   \n","13478             0              1                   0                    0   \n","13479             0              1                   0                    0   \n","13480             0              1                   0                    0   \n","13481             0              1                   0                    0   \n","13482             0              1                   0                    0   \n","13483             0              1                   0                    0   \n","13484             0              1                   0                    0   \n","13485             0              1                   0                    0   \n","13486             0              1                   0                    0   \n","13487             0              1                   0                    0   \n","13488             0              1                   0                    0   \n","13489             0              1                   0                    0   \n","13490             0              1                   0                    0   \n","13491             0              1                   0                    0   \n","13492             0              1                   0                    0   \n","13493             0              1                   0                    0   \n","13494             0              1                   0                    0   \n","13495             0              1                   0                    0   \n","13496             0              1                   0                    0   \n","13497             0              0                   0                    0   \n","13498             0              1                   0                    0   \n","13499             0              0                   0                    0   \n","\n","       willliams_domination  mclaren_domination  non_domination  \\\n","13450                     0                   0               0   \n","13451                     0                   0               0   \n","13452                     0                   0               0   \n","13453                     0                   0               0   \n","13454                     0                   0               0   \n","13455                     0                   0               0   \n","13456                     0                   0               0   \n","13457                     0                   0               0   \n","13458                     0                   0               0   \n","13459                     0                   0               0   \n","13460                     0                   0               0   \n","13461                     0                   0               0   \n","13462                     0                   0               0   \n","13463                     0                   0               0   \n","13464                     0                   0               0   \n","13465                     0                   0               0   \n","13466                     0                   0               0   \n","13467                     0                   0               0   \n","13468                     0                   0               0   \n","13469                     0                   0               0   \n","13470                     0                   0               0   \n","13471                     0                   0               0   \n","13472                     0                   0               0   \n","13473                     0                   0               0   \n","13474                     0                   0               0   \n","13475                     0                   0               0   \n","13476                     0                   0               0   \n","13477                     0                   0               0   \n","13478                     0                   0               0   \n","13479                     0                   0               0   \n","13480                     0                   0               0   \n","13481                     0                   0               0   \n","13482                     0                   0               0   \n","13483                     0                   0               0   \n","13484                     0                   0               0   \n","13485                     0                   0               0   \n","13486                     0                   0               0   \n","13487                     0                   0               0   \n","13488                     0                   0               0   \n","13489                     0                   0               0   \n","13490                     0                   0               0   \n","13491                     0                   0               0   \n","13492                     0                   0               0   \n","13493                     0                   0               0   \n","13494                     0                   0               0   \n","13495                     0                   0               0   \n","13496                     0                   0               0   \n","13497                     0                   0               0   \n","13498                     0                   0               0   \n","13499                     0                   0               0   \n","\n","       constructor_champion  \n","13450                     1  \n","13451                     1  \n","13452                     1  \n","13453                     1  \n","13454                     1  \n","13455                     1  \n","13456                     1  \n","13457                     1  \n","13458                     1  \n","13459                     1  \n","13460                     1  \n","13461                     1  \n","13462                     1  \n","13463                     1  \n","13464                     1  \n","13465                     1  \n","13466                     1  \n","13467                     1  \n","13468                     1  \n","13469                     1  \n","13470                     1  \n","13471                     1  \n","13472                     1  \n","13473                     1  \n","13474                     1  \n","13475                     1  \n","13476                     1  \n","13477                     1  \n","13478                     1  \n","13479                     1  \n","13480                     1  \n","13481                     2  \n","13482                     2  \n","13483                     2  \n","13484                     2  \n","13485                     2  \n","13486                     2  \n","13487                     2  \n","13488                     2  \n","13489                     2  \n","13490                     2  \n","13491                     2  \n","13492                     2  \n","13493                     2  \n","13494                     2  \n","13495                     2  \n","13496                     2  \n","13497                     2  \n","13498                     2  \n","13499                     2  "],"text/html":["\n","  <div id=\"df-8a26c5fb-ecc0-4f46-b54a-6a61debabce3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>constructorId</th>\n","      <th>past_years_podium</th>\n","      <th>this_year_podium</th>\n","      <th>past_years_point</th>\n","      <th>this_year_point</th>\n","      <th>past_years_wins</th>\n","      <th>this_year_wins</th>\n","      <th>past_years_pole</th>\n","      <th>this_year_pole</th>\n","      <th>driver_points</th>\n","      <th>constructor_points</th>\n","      <th>important_race</th>\n","      <th>downforce_race</th>\n","      <th>mixed_race</th>\n","      <th>motor_race</th>\n","      <th>constructor_finish</th>\n","      <th>driver_fault</th>\n","      <th>driver_finish</th>\n","      <th>ferrari_domination</th>\n","      <th>mercedes_domination</th>\n","      <th>willliams_domination</th>\n","      <th>mclaren_domination</th>\n","      <th>non_domination</th>\n","      <th>constructor_champion</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>13450</th>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>252.0</td>\n","      <td>38.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>153.0</td>\n","      <td>258.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13451</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3.0</td>\n","      <td>13.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13452</th>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>20.0</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>20.0</td>\n","      <td>120.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13453</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>77.0</td>\n","      <td>31.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>77.0</td>\n","      <td>149.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13454</th>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.0</td>\n","      <td>23.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13455</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>14.0</td>\n","      <td>8.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>10.0</td>\n","      <td>13.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13456</th>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>250.0</td>\n","      <td>39.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>154.0</td>\n","      <td>269.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13457</th>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>249.5</td>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>149.5</td>\n","      <td>307.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13458</th>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>109.0</td>\n","      <td>16.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>34.0</td>\n","      <td>77.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13459</th>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>167.0</td>\n","      <td>26.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>100.0</td>\n","      <td>120.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13460</th>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>223.0</td>\n","      <td>48.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>115.0</td>\n","      <td>269.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13461</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>122.0</td>\n","      <td>16.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>72.0</td>\n","      <td>149.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13462</th>\n","      <td>1</td>\n","      <td>50</td>\n","      <td>8</td>\n","      <td>419.0</td>\n","      <td>74.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>3</td>\n","      <td>218.0</td>\n","      <td>587.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13463</th>\n","      <td>3</td>\n","      <td>34</td>\n","      <td>9</td>\n","      <td>558.5</td>\n","      <td>123.0</td>\n","      <td>11</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>369.5</td>\n","      <td>559.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13464</th>\n","      <td>1</td>\n","      <td>50</td>\n","      <td>8</td>\n","      <td>688.5</td>\n","      <td>122.0</td>\n","      <td>18</td>\n","      <td>3</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>369.5</td>\n","      <td>587.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13465</th>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>250.0</td>\n","      <td>60.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>158.0</td>\n","      <td>307.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13466</th>\n","      <td>3</td>\n","      <td>35</td>\n","      <td>10</td>\n","      <td>315.0</td>\n","      <td>72.0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>190.0</td>\n","      <td>585.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13467</th>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>109.0</td>\n","      <td>10.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>34.0</td>\n","      <td>77.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13468</th>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>233.0</td>\n","      <td>32.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>115.0</td>\n","      <td>275.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13469</th>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>76.0</td>\n","      <td>8.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>43.0</td>\n","      <td>77.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13470</th>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>256.0</td>\n","      <td>54.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>159.0</td>\n","      <td>323.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13471</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>134.0</td>\n","      <td>27.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>74.0</td>\n","      <td>155.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13472</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>77.0</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>81.0</td>\n","      <td>155.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13473</th>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13474</th>\n","      <td>1</td>\n","      <td>52</td>\n","      <td>9</td>\n","      <td>434.0</td>\n","      <td>74.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>3</td>\n","      <td>226.0</td>\n","      <td>613.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13475</th>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>175.0</td>\n","      <td>34.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>110.0</td>\n","      <td>142.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13476</th>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>20.0</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>32.0</td>\n","      <td>142.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13477</th>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>253.5</td>\n","      <td>51.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>164.5</td>\n","      <td>323.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13478</th>\n","      <td>1</td>\n","      <td>52</td>\n","      <td>9</td>\n","      <td>714.5</td>\n","      <td>148.0</td>\n","      <td>19</td>\n","      <td>4</td>\n","      <td>15</td>\n","      <td>2</td>\n","      <td>387.5</td>\n","      <td>613.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13479</th>\n","      <td>3</td>\n","      <td>35</td>\n","      <td>10</td>\n","      <td>576.5</td>\n","      <td>141.0</td>\n","      <td>11</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>395.5</td>\n","      <td>585.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13480</th>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>251.0</td>\n","      <td>22.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>160.0</td>\n","      <td>275.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13481</th>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>10.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13482</th>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13483</th>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>257.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13484</th>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>233.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13485</th>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>105.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13486</th>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>109.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13487</th>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>10.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13488</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>9.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13489</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>442.0</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>8.0</td>\n","      <td>9.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13490</th>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>32.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13491</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>136.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>6.0</td>\n","      <td>8.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13492</th>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>10.0</td>\n","      <td>10.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13493</th>\n","      <td>1</td>\n","      <td>53</td>\n","      <td>0</td>\n","      <td>19.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12.0</td>\n","      <td>27.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13494</th>\n","      <td>1</td>\n","      <td>53</td>\n","      <td>0</td>\n","      <td>732.5</td>\n","      <td>0.0</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>15.0</td>\n","      <td>27.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13495</th>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>268.5</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>18.0</td>\n","      <td>44.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13496</th>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>257.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>26.0</td>\n","      <td>44.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13497</th>\n","      <td>3</td>\n","      <td>36</td>\n","      <td>0</td>\n","      <td>315.0</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13498</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>81.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.0</td>\n","      <td>8.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13499</th>\n","      <td>3</td>\n","      <td>36</td>\n","      <td>0</td>\n","      <td>602.5</td>\n","      <td>0.0</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a26c5fb-ecc0-4f46-b54a-6a61debabce3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8a26c5fb-ecc0-4f46-b54a-6a61debabce3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8a26c5fb-ecc0-4f46-b54a-6a61debabce3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":350}]},{"cell_type":"code","source":["\n","\n","#do for constructors\n","#put constructor champion\n","#put circuit data \n","#put \n","#whether win first 2 races \n","#whether win first race\n","#point difference after 2 race \n","#point difference after 4 races\n","#some features is 4 races \n","#champion of the season\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":381},"id":"60o_yamF9p8e","executionInfo":{"status":"error","timestamp":1650997692535,"user_tz":240,"elapsed":175,"user":{"displayName":"Mehmet İnan","userId":"08992617967511172155"}},"outputId":"52c19432-62ec-4ec6-b9bb-ace5d25971e1"},"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-116-6070cbdc31e1>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mdf4\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf4\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msort_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'date'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mdf4\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf4\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mdf4\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'year'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m>\u001b[0m\u001b[0;36m1960\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mdf4\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf4\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'grid'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'position'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'milliseconds'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m#do for constructors\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    309\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstacklevel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    310\u001b[0m                 )\n\u001b[0;32m--> 311\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    312\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    313\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4911\u001b[0m             \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4912\u001b[0m             \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minplace\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4913\u001b[0;31m             \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4914\u001b[0m         )\n\u001b[1;32m   4915\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4148\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32min\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4149\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4150\u001b[0;31m                 \u001b[0mobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_drop_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4151\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4152\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_drop_axis\u001b[0;34m(self, labels, axis, level, errors)\u001b[0m\n\u001b[1;32m   4183\u001b[0m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4184\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4185\u001b[0;31m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4186\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0maxis_name\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mnew_axis\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4187\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   6015\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0many\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6016\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0merrors\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m\"ignore\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6017\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{labels[mask]} not found in axis\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6018\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6019\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdelete\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: \"['grid' 'position' 'milliseconds'] not found in axis\""]}]},{"cell_type":"code","source":[""],"metadata":{"id":"VRHQhYLxE0Ds"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df4"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"JukUbra0GUsd","executionInfo":{"status":"ok","timestamp":1650997159106,"user_tz":240,"elapsed":136,"user":{"displayName":"Mehmet İnan","userId":"08992617967511172155"}},"outputId":"4efa3258-b839-46ee-9ba7-216d14e8592d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       raceId  driverId  constructorId  points_x  statusId  winner  year  \\\n","9152      738       403            8.0       4.0         1       0  1961   \n","9153      738       476            8.0       3.0         3       0  1961   \n","9162      738       479            NaN       0.0         5       0  1961   \n","9161      738       347            NaN       0.0        98       0  1961   \n","9151      738       386            8.0       6.0         1       0  1961   \n","...       ...       ...            ...       ...       ...     ...   ...   \n","14581    1074       832            8.0      18.0         1       0  2022   \n","14580    1074       844            8.0      26.0         1       1  2022   \n","14597    1074       815            9.0       0.0         5       0  2022   \n","14588    1074         4            4.0       2.0         1       0  2022   \n","14598    1074       830            9.0       0.0        38       0  2022   \n","\n","            date  circuitId  podium  pole_position  past_years_podium  \\\n","9152  1961-05-14          6       1              0                 13   \n","9153  1961-05-14          6       0              0                 13   \n","9162  1961-05-14          6       0              0                  3   \n","9161  1961-05-14          6       0              0                  0   \n","9151  1961-05-14          6       1              0                 13   \n","...          ...        ...     ...            ...                ...   \n","14581 2022-03-20          3       1              0                  8   \n","14580 2022-03-20          3       1              1                  8   \n","14597 2022-03-20          3       0              0                 36   \n","14588 2022-03-20          3       0              0                  2   \n","14598 2022-03-20          3       0              0                 36   \n","\n","       this_year_podium  past_years_point  this_year_point  past_years_wins  \\\n","9152                  0              33.0              0.0                1   \n","9153                  0              10.0              0.0                0   \n","9162                  0              28.0              0.0                2   \n","9161                  0              14.0              0.0                1   \n","9151                  0               8.0              0.0                0   \n","...                 ...               ...              ...              ...   \n","14581                 0             268.5              0.0                0   \n","14580                 0             257.0              0.0                0   \n","14597                 0             315.0              0.0                2   \n","14588                 0              81.0              0.0                0   \n","14598                 0             602.5              0.0               12   \n","\n","       this_year_wins  past_years_pole  this_year_pole  points_y  points  \n","9152                0                1               0       4.0     NaN  \n","9153                0                0               0       3.0     NaN  \n","9162                0                2               0       0.0     NaN  \n","9161                0                1               0       0.0     NaN  \n","9151                0                0               0       6.0     NaN  \n","...               ...              ...             ...       ...     ...  \n","14581               0                0               0      18.0     NaN  \n","14580               0                2               0      26.0     NaN  \n","14597               0                0               0       0.0     0.0  \n","14588               0                0               0       2.0     NaN  \n","14598               0                9               0       0.0     0.0  \n","\n","[13500 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-bd25005b-3496-4682-983a-9b392962dd0e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>raceId</th>\n","      <th>driverId</th>\n","      <th>constructorId</th>\n","      <th>points_x</th>\n","      <th>statusId</th>\n","      <th>winner</th>\n","      <th>year</th>\n","      <th>date</th>\n","      <th>circuitId</th>\n","      <th>podium</th>\n","      <th>pole_position</th>\n","      <th>past_years_podium</th>\n","      <th>this_year_podium</th>\n","      <th>past_years_point</th>\n","      <th>this_year_point</th>\n","      <th>past_years_wins</th>\n","      <th>this_year_wins</th>\n","      <th>past_years_pole</th>\n","      <th>this_year_pole</th>\n","      <th>points_y</th>\n","      <th>points</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9152</th>\n","      <td>738</td>\n","      <td>403</td>\n","      <td>8.0</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1961</td>\n","      <td>1961-05-14</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>33.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>9153</th>\n","      <td>738</td>\n","      <td>476</td>\n","      <td>8.0</td>\n","      <td>3.0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1961</td>\n","      <td>1961-05-14</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>10.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>9162</th>\n","      <td>738</td>\n","      <td>479</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>1961</td>\n","      <td>1961-05-14</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>28.0</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>9161</th>\n","      <td>738</td>\n","      <td>347</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>98</td>\n","      <td>0</td>\n","      <td>1961</td>\n","      <td>1961-05-14</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>14.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>9151</th>\n","      <td>738</td>\n","      <td>386</td>\n","      <td>8.0</td>\n","      <td>6.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1961</td>\n","      <td>1961-05-14</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>8.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>6.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>14581</th>\n","      <td>1074</td>\n","      <td>832</td>\n","      <td>8.0</td>\n","      <td>18.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2022</td>\n","      <td>2022-03-20</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>268.5</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>18.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>14580</th>\n","      <td>1074</td>\n","      <td>844</td>\n","      <td>8.0</td>\n","      <td>26.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2022</td>\n","      <td>2022-03-20</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>257.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>26.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>14597</th>\n","      <td>1074</td>\n","      <td>815</td>\n","      <td>9.0</td>\n","      <td>0.0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>2022</td>\n","      <td>2022-03-20</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>36</td>\n","      <td>0</td>\n","      <td>315.0</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>14588</th>\n","      <td>1074</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2022</td>\n","      <td>2022-03-20</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>81.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>14598</th>\n","      <td>1074</td>\n","      <td>830</td>\n","      <td>9.0</td>\n","      <td>0.0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>2022</td>\n","      <td>2022-03-20</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>36</td>\n","      <td>0</td>\n","      <td>602.5</td>\n","      <td>0.0</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>13500 rows × 21 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bd25005b-3496-4682-983a-9b392962dd0e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bd25005b-3496-4682-983a-9b392962dd0e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bd25005b-3496-4682-983a-9b392962dd0e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":115}]},{"cell_type":"code","source":["def past_n_year_dataframe(df,n):\n","\n","  past_point = []\n","  for i in range(len(df)):\n","    past_point.append(total_n_years_points(df.iloc[i],df,n))\n","\n","  df[\"Past_n_year_points\"] = past_point\n","\n","  past_win = []\n","  for i in range(len(df)):\n","    past_win.append(total_n_years_wins(df.iloc[i],df,n))\n","\n","  df[\"Past_n_year_wins\"] = past_win\n","\n","  past_poll = []\n","  for i in range(len(df)):\n","    past_poll.append(total_n_years_polls(df.iloc[i],df,n))\n","\n","  df[\"Past_n_year_pole\"] = past_poll\n","\n","  past_podium = []\n","  for i in range(len(df)):\n","    past_podium.append(total_n_years_poidium_driver(df.iloc[i],df,n))\n","\n","  df[\"Past_n_year_podium_driver\"] = past_podium\n","\n","  idChanger(df,\"constructorId\")\n","  df = df[(df[\"constructorId\"]!=\"nan\")]\n","  \n","  return df\n","\n","past_n_year_dataframe(df2.copy(),n=2)\n","\n","# Building constructor data frame\n","# df has to have past n year data (use past 1 year data)\n","def constructor_df(df_nyear):\n","  df_complete = pd.DataFrame()\n","  for raceId in tqdm(df_nyear[\"raceId\"].unique()):\n","    df_race = df_nyear[df_nyear[\"raceId\"]==raceId].copy()\n","    df_constructor = df_race.groupby([\"raceId\",\"constructorId\"]).sum()[[\"grid\",\"points\",\"podium\",\"pole_position\",\"Past_n_year_points\",\"Past_n_year_wins\",\"Past_n_year_pole\",\"Past_n_year_podium_driver\",\"winner\"]]\n","    df_complete = pd.concat([df_complete,df_constructor])\n","  \n","  #df_complete[\"raceId\"] = df_complete[\"raceId\"]/2\n","  #result_df = df_complete.merge(races[[\"raceId\",\"year\"]], how=\"left\", on=[\"raceId\"])\n","  \n","  return df_complete\n","\n","df_nyear = past_n_year_dataframe(df2.copy(),n=2)\n","cons_df = constructor_df(df_nyear)\n","\n","cons_df_no_index = cons_df.reset_index()\n","total_df = cons_df_no_index.merge(races[[\"raceId\",\"year\"]], how=\"left\", on=\"raceId\")\n","\n","def constructor_df(df_nyear):\n","  df_complete = pd.DataFrame()\n","  for raceId in tqdm(df_nyear[\"raceId\"].unique()):\n","    df_race = df_nyear[df_nyear[\"raceId\"]==raceId].copy()\n","    df_constructor = df_race.groupby([\"raceId\",\"constructorId\"]).sum()[[\"grid\",\"points\",\"podium\",\"pole_position\",\"Past_n_year_points\",\"Past_n_year_wins\",\"Past_n_year_pole\",\"Past_n_year_podium_driver\",\"winner\"]]\n","    df_complete = pd.concat([df_complete,df_constructor])\n","  \n","  #df_complete[\"raceId\"] = df_complete[\"raceId\"]/2\n","  #result_df = df_complete.merge(races[[\"raceId\",\"year\"]], how=\"left\", on=[\"raceId\"])\n","  cons_df_no_index = cons_df.reset_index()\n","  total_df = cons_df_no_index.merge(races[[\"raceId\",\"year\"]], how=\"left\", on=\"raceId\")\n","  \n","  return total_df\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":381},"id":"00yj89vP1_-1","executionInfo":{"status":"error","timestamp":1650988861224,"user_tz":240,"elapsed":2016,"user":{"displayName":"Mehmet İnan","userId":"08992617967511172155"}},"outputId":"63f6d031-805b-45df-95c4-23b7d3f84e46"},"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-17-8b4ca3ec245b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0mpast_point\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m   \u001b[0mpast_point\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtotal_n_years_points\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0miloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0mdf1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"Past_2_year_points\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpast_point\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-17-8b4ca3ec245b>\u001b[0m in \u001b[0;36mtotal_n_years_points\u001b[0;34m(x, df, n)\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mtotal_n_years_points\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m   \u001b[0mdfz\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"date\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m<=\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"date\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m&\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"date\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m>=\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"date\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0mtimedelta\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdays\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m365\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m&\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"driverId\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m==\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"driverId\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m   \u001b[0mpast_points\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdfz\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"points\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m   \u001b[0;32mreturn\u001b[0m \u001b[0mpast_points\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3447\u001b[0m         \u001b[0;31m# Do we have a (boolean) 1d indexer?\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3448\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_bool_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3449\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_bool_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3450\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3451\u001b[0m         \u001b[0;31m# We are left with two options: a single key, and a collection of keys,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m_getitem_bool_array\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3502\u001b[0m         \u001b[0mkey\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcheck_bool_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3503\u001b[0m         \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnonzero\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3504\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_take_with_is_copy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3505\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3506\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_take_with_is_copy\u001b[0;34m(self, indices, axis)\u001b[0m\n\u001b[1;32m   3626\u001b[0m         \u001b[0mSee\u001b[0m \u001b[0mthe\u001b[0m \u001b[0mdocstring\u001b[0m \u001b[0mof\u001b[0m\u001b[0;31m \u001b[0m\u001b[0;31m`\u001b[0m\u001b[0mtake\u001b[0m\u001b[0;31m`\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mfull\u001b[0m \u001b[0mexplanation\u001b[0m \u001b[0mof\u001b[0m \u001b[0mthe\u001b[0m \u001b[0mparameters\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3627\u001b[0m         \"\"\"\n\u001b[0;32m-> 3628\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtake\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindices\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mindices\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3629\u001b[0m         \u001b[0;31m# Maybe set copy if we didn't actually change the index.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3630\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mequals\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mtake\u001b[0;34m(self, indices, axis, is_copy, **kwargs)\u001b[0m\n\u001b[1;32m   3614\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3615\u001b[0m         new_data = self._mgr.take(\n\u001b[0;32m-> 3616\u001b[0;31m             \u001b[0mindices\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_block_manager_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverify\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3617\u001b[0m         )\n\u001b[1;32m   3618\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"take\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mtake\u001b[0;34m(self, indexer, axis, verify)\u001b[0m\n\u001b[1;32m    868\u001b[0m             \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    869\u001b[0m             \u001b[0mallow_dups\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 870\u001b[0;31m             \u001b[0mconsolidate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    871\u001b[0m         )\n\u001b[1;32m    872\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mreindex_indexer\u001b[0;34m(self, new_axis, indexer, axis, fill_value, allow_dups, copy, consolidate, only_slice)\u001b[0m\n\u001b[1;32m    686\u001b[0m                     ),\n\u001b[1;32m    687\u001b[0m                 )\n\u001b[0;32m--> 688\u001b[0;31m                 \u001b[0;32mfor\u001b[0m \u001b[0mblk\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mblocks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    689\u001b[0m             ]\n\u001b[1;32m    690\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    686\u001b[0m                     ),\n\u001b[1;32m    687\u001b[0m                 )\n\u001b[0;32m--> 688\u001b[0;31m                 \u001b[0;32mfor\u001b[0m \u001b[0mblk\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mblocks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    689\u001b[0m             ]\n\u001b[1;32m    690\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/blocks.py\u001b[0m in \u001b[0;36mtake_nd\u001b[0;34m(self, indexer, axis, new_mgr_locs, fill_value)\u001b[0m\n\u001b[1;32m   1152\u001b[0m             \u001b[0mnew_mgr_locs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr_locs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1153\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1154\u001b[0;31m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mis_dtype_equal\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1155\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmake_block\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_mgr_locs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1156\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","source":["constructor_standings['points'].max()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RQRtuIt579Ox","executionInfo":{"status":"ok","timestamp":1651000587277,"user_tz":240,"elapsed":176,"user":{"displayName":"Mehmet İnan","userId":"08992617967511172155"}},"outputId":"0692bef3-80dd-4ba6-9cb8-5829b604775f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["765.0"]},"metadata":{},"execution_count":175}]},{"cell_type":"code","source":[""],"metadata":{"id":"tdvB1HcPTYoX"},"execution_count":null,"outputs":[]}]}